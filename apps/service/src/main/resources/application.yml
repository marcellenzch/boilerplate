spring:
  datasource:
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/sampledb}
    username: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:postgres}
    hikari:
      connection-timeout: 30000
      maximum-pool-size: 10
  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          lob:
            non_contextual_creation: true
        id:
          new_generator_mappings: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  liquibase:
    change-log: classpath:domain/changelog-master.yml
    drop-first: false
    user: ${JDBC_DATABASE_USERNAME:postgres}
    password: ${JDBC_DATABASE_PASSWORD:postgres}
    url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/sampledb}
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8081/realms/sample
error:
  handling:
    http-status-in-json-response: true
    exception-logging: NO_LOGGING
    full-stacktrace-http-statuses: 5xx
    log-levels:
      5xx: ERROR
    http-statuses:
      org.springframework.security.authorization.AuthorizationDeniedException: unauthorized
    codes:
      UserEmailUnique: USER_EMAIL_UNIQUE

logging:
  level:
    org:
      springframework:
        security: INFO

springdoc:
  pathsToMatch: /, /api/**
  api-docs:
    path: /openapi
    version: OPENAPI_3_1
  swagger-ui:
    path: /openapi/swagger-ui

app:
  datasource:
    first:
      url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/sampledb}
      username: ${JDBC_DATABASE_USERNAME:sampledb}
      password: ${JDBC_DATABASE_USERNAME:sampledb}
      configuration:
        connection-timeout: 30000
        maximum-pool-size: 10

    second:
      url: ${JDBC_DATABASE_URL:jdbc:postgresql://localhost:5432/sampledb}
      username: ${JDBC_DATABASE_USERNAME:postgres}
      password: ${JDBC_DATABASE_USERNAME:postgres}
      configuration:
        connection-timeout: 30000
        maximum-pool-size: 10
